import printfl(real) as print;
import c_init_float(real, name) as init;
sub main(real mainArg){
        df a;
        print(mainArg);
        foo(a);
}

sub foo(real f){
        df one;
        for i = 1..2 {
                df two;
                while (128 < 129), j = 0 .. out f {
                        df three;
                        if 11 < 22 {
                                df four;
                                let x = f[j] {
                                        df five;
                                        init(1, x);
                                        print(x);
                                        init(1, x[i]);
                                        print(x[i]);
                                }
                        }
                }
        }
}
====
import printfl(real) as print;
import c_init_float(real, name) as init;

sub main(){
        foo(1.0);
}

sub foo(real f){
        let x = f {
                if (x[0]){
                        print(1.0);
                }
                for i=1..2 {
                        df a;
                        print(i);
                        while (i < 2), j = 1..out a {
                                print(j);
                        }
                }
        }
}
====

import c_init_float(real, name) as init;
import printint(int) as print;
sub main(){
        for i = 0..1 {
                print(i[1]);
        }
}
====
import printstr(string) as printString;
import printfl(real) as printFloat;
import printindval(int, string, real) as printIndexedValue;
import printdoubleindval(int, int, string, real) as printDoubleIndexedValue;
import printint(int) as printInt;
import printnamedfl(string, real) as printNamedFloat;
import printnamedint(string ,int) as printNamedInt;

import c_init_int(int, name) as initInt;
import c_init_intint(int, name) as initIntInt;
import c_init_float(real, name) as initFloat;

sub main(int size, int maxiterations, real accuracy, int printa, int printx, int printb){

        df a, x, b;

        printNamedFloat("Required accuracy squared: ", accuracy * accuracy);

        for i = 0..size - 1 {
                for j = 0..size - 1 {
                        if i == j initInt(((i + 1) * (j + 2) * 33 + j + i) % 37 + 40 * size, a[i][j]);
                        if i != j initInt(((i + 1) * (j + 2) * 33 + j + i) % 37, a[i][j]);
                }
        }

        for i = 0..size - 1 {
                initInt((i * 21 + size) % 34, b[i]);
        }

        solve(size, a, x, b, maxiterations, accuracy);

        if printx != 0 {
                for i = 0..size - 1 {
                        printIndexedValue(i, "x", x[i]);
                }
        }

        if printb != 0 {
                for i = 0..size - 1 {
                        printIndexedValue(i, "b", b[i]);
                }
        }

        if printa != 0 {
                for i = 0..size - 1 {
                        for j = 0..size - 1 {
                                printDoubleIndexedValue(i, j, "a", a[i][j]);
                        }
                }
        }
}

sub dp(int size, name left, name right, name res){
        df temp;
        for i = 0..size - 1 {
                initFloat(left[i] * right[i], temp[i]);
        }
        for i = 0..size - 1 {
                initFloat(temp[size + i - 1] + temp[i], temp[size + i]);
        }
        initFloat(temp[size * 2 - 2], res);
}

sub monv(int size, name m, name v, name res){
        for i = 0..size - 1 {
                dp(size, m[i], v, res[i]);
        }
}

sub sonv(int size, real a, name v, name res){
        for i = 0..size - 1 {
                initFloat(a * v[i], res[i]);
        }
}

sub vsubv(int size, name left, name right, name res){
        for i = 0..size - 1 {
                initFloat(left[i] - right[i], res[i]);
        }
}

sub norm_check(int size, name a, real accuracy, name res, int cur, int max){
        df temp;
        initFloat((a[0] + a[1]) * (a[0] + a[1]), temp[0]);
        for i = 1..size - 2 {
                initFloat(temp[i - 1] + a[i + 1] * a[i + 1], temp[i]);
        }
        printIndexedValue(cur, "Norm", temp[size - 2]);
        if cur == max {
                initIntInt(1, res);
        }
        if cur != max {
                if temp[size - 2] <= accuracy * accuracy {
                        initIntInt(1, res);
                }
                if temp[size - 2] > accuracy * accuracy {
                        initIntInt(0, res);
                }
        }
}

sub solve(int size, name a, name x, name b, int maxiterations, real accuracy){

        df xn, finished, totaliterations;
        for i = 0..size - 1 {
                initInt(0, xn[1][i]);
        }

        initIntInt(0, finished[0]);

        while finished[i - 1] == 0, i = 1..out totaliterations {

                df axn, yn, tnu, ayn, tnl, tnyn, axnn, axnnb;

                monv(size, a, xn[i], axn);

                vsubv(size, axn, b, yn);

                monv(size, a, yn, ayn);

                dp(size, yn, ayn, tnu);

                dp(size, ayn, ayn, tnl);

                sonv(size, tnu / tnl, yn, tnyn);

                vsubv(size, xn[i], tnyn, xn[i + 1]);

                monv(size, a, xn[i + 1], axnn);

                vsubv(size, axnn, b, axnnb);

                norm_check(size, axnnb, accuracy, finished[i], i, maxiterations);

        }

        printNamedInt("Total iterations: ", totaliterations - 1);
        for i = 0..size - 1 {
                initFloat(xn[totaliterations][i], x[i]);
        }

        printNamedFloat("x[0] = ", x[0]);
        printNamedFloat("x[n - 1] = ", x[size - 1]);

}
