{
  "SYN1": "error[SYN1]: Call arguments do not match declared arguments.\n- Called at:\n$callstack_entry- Function information:\n$cf",
  "SYN2": "error[SYN2]: No function with name $cf_name exists.\n- Called at:\n$callstack_entry",
  "SYN3": "error[SYN3]: Wrong number of arguments when calling the function $cf_name.\n- Called at:\n$callstack_entry- Function information:\n$cf",
  "SYN4": "error[SYN4]: Multiple df declarations inside the same block.\n- At:\n$callstack_entry",
  "SYN5.1": "warning[SYN5.1]: Macros is not used.",
  "SYN5.2": "warning[SYN5.2]: \"let\" name is not used.\n$typed_id",
  "SYN5.3": "warning[SYN5.3]: Base name is not used.\n$df",
  "SYN5.4": "warning[SYN5.4]: Atomic CF is not used.\n$cf",
  "SYN5.5": "warning[SYN5.5]: Structured CF is not used.\n$cf",
  "SYN5.6": "warning[SYN5.6]: Structured CF's argument is not used.\n$cf\n$typed_id",
  "SYN5.7": "warning[SYN5.7]: \"for\" iterator is not used.\n$callstack_entry\n$typed_id",
  "SYN5.8": "warning[SYN5.8]: \"while\" iterator is not used.\n$callstack_entry\n$typed_id",
  "SYN6.1": "error[SYN6.1]: Importing a CF under the name of an existing CF.\n- Duplicate CFs information:\n$cfs",
  "SYN6.2": "error[SYN6.2]: Declaring a structured CF with the name of an existing CF.\n- Duplicate CFs information:\n$cfs",
  "SYN7": "error[SYN7]: No CF named \"main\"",
  "SYN8.1": "error[SYN8.1]: Duplicate name declaration: base name $id_name.\nAt:\n$callstack_entry",
  "SYN8.2": "error[SYN8.2]: Duplicate name declaration: \"for\" iterator $id_name.\nAt:\n$callstack_entry",
  "SYN8.3": "error[SYN8.3]: Duplicate name declaration: \"while\" iterator $id_name.\nAt:\n$callstack_entry",
  "SYN8.4": "error[SYN8.4]: Duplicate name declaration: \"let\" name $id_name.\nAt:\n$callstack_entry",
  "SYN9": "error[SYN9]: Attempt to use undeclared DF $df_name.\n$df",
  "SYN10": "error[SYN10]: Attempt to import non-existing C++ function.\n- Function information:\n$cf",
  "SYN11": "error[SYN11]: Attempt to index an identifier $expr that is not a DF.\n- Callstack:\n$callstack",
  "SYN12": "error[SYN12]: LuNA atomic CF signature does not match C++ signature.\n$cf",
  
  "SEM1": "error[SEM1]: Wrong type of a DF used as an argument of an atomic CF.\n$cf\n$df",  
  "SEM2.1": "warning[SEM2.1]: Possible repeated initialization of single DF $df_true.\nInitialized:\n$initialized\nAlso here:\n$other_initializations",
  "SEM2.2": "warning[SEM2.2]: Possible overlap of initialization loops for DF $df_name.\nInitialized:\n$initialization_loop1\nAlso here:\n$initialization_loop2",
  "SEM3.1": "warning[SEM3.1]: Consumed DF $df_true might not have been initialized.\nUsed:\n$used\nInitialized:\n$initialized",
  "SEM3.2": "error[SEM3.2]: Cyclic dependence.",
  "SEM3.3": "warning[SEM3.3]: Consumed index range might not have been initialized for DF $df_name.\nUsed:\n$used\nInitialized:\n$initialized",
  "SEM3.4": "error[SEM3.4]: Attempt to request uninitialized DF.",
  "SEM3.5": "error[SEM3.5]: Attempt to use DF after exceeding requests limit.",
  "SEM3.6": "error[SEM3.6]: Attempt to use DF after deleting it with the deletion operator",
  "SEM4": "error[SEM4]: Unused DF $df_name.\n$df",
  "SEM5": "warning[SEM5]: Condition $expr is always $bool.\nIn:\n$callstack_entry",
  "SEM6": "warning[SEM6]: Condition $expr is $bool in every execution path.\nIn:\n$callstack_entry",
  "SEM7": "warning[SEM7]: Result of boolean operator is used where number is expected:\n $expr, argument at index $index.\nIn:\n$callstack_entry",
  "SEM8": "error[SEM8]: Unconditional recursion.\n- Callstack:\n$callstack",
  "SEM9": "error[SEM9]: Attempt to use information dependence operator on structured CF",
  "SEM10": "error[SEM10]: No \"nfparam\" value given.",
  "SEM11": "error[SEM11]: Attempt to request DF from node where it is not present."
}
